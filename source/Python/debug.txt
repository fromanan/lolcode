Step # 1
Executed line # 1 : RANDOM s1(49) 
ST { s1:49 }

Step # 2
Executed line # 2 : OUT_NUM s1(49) 
ST { s1:49 }

Step # 3
Executed line # 3 : OUT_CHAR 10(10) 
ST { s1:49 }

Step # 4
Executed line # 4 : VAL_COPY 0(0) s2(0) 
ST { s1:49 s2:0 }

Step # 5
Executed line # 5 : VAL_COPY 0(0) s3(0) 
ST { s1:49 s2:0 s3:0 }

Step # 6
Executed line # 6 : VAL_COPY 0(0) s4(0) 
ST { s1:49 s2:0 s3:0 s4:0 }

Step # 7
Executed line # 7 : JUMP _func_end_fib(52) 
ST { s1:49 s2:0 s3:0 s4:0 }

Step # 8
Executed line # 53 : _func_end_fib(52) : 
ST { s1:49 s2:0 s3:0 s4:0 }

Step # 9
Executed line # 54 : PUSH s3(0) 
ST { s1:49 s2:0 s3:0 s4:0 }
Stack (top) { 0 } (bottom)

Step # 10
Executed line # 55 : PUSH s4(0) 
ST { s1:49 s2:0 s3:0 s4:0 }
Stack (top) { 0 0 } (bottom)

Step # 11
Executed line # 56 : PUSH s2(0) 
ST { s1:49 s2:0 s3:0 s4:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 12
Executed line # 57 : VAL_COPY 4(4) s19(4) 
ST { s1:49 s19:4 s2:0 s3:0 s4:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 13
Executed line # 58 : VAL_COPY s19(4) s2(4) 
ST { s1:49 s19:4 s2:4 s3:0 s4:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 14
Executed line # 59 : VAL_COPY end_return_3(60) s4(60) 
ST { s1:49 s19:4 s2:4 s3:0 s4:60 }
Stack (top) { 0 0 0 } (bottom)

Step # 15
Executed line # 60 : JUMP _func_fib(7) 
ST { s1:49 s19:4 s2:4 s3:0 s4:60 }
Stack (top) { 0 0 0 } (bottom)

Step # 16
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s19:4 s2:4 s3:0 s4:60 }
Stack (top) { 0 0 0 } (bottom)

Step # 17
Executed line # 9 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s19:4 s2:4 s3:0 s4:60 s5:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 18
Executed line # 10 : TEST_GTR s5(2) s2(4) s6(0) 
ST { s1:49 s19:4 s2:4 s3:0 s4:60 s5:2 s6:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 19
Executed line # 11 : JUMP_IF_0 s6(0) end_if_2(15) 
ST { s1:49 s19:4 s2:4 s3:0 s4:60 s5:2 s6:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 20
Executed line # 16 : end_if_2(15) : 
ST { s1:49 s19:4 s2:4 s3:0 s4:60 s5:2 s6:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 21
Executed line # 17 : VAL_COPY 2(2) s9(2) 
ST { s1:49 s19:4 s2:4 s3:0 s4:60 s5:2 s6:0 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 22
Executed line # 18 : SUB s2(4) s9(2) s10(2) 
ST { s1:49 s10:2 s19:4 s2:4 s3:0 s4:60 s5:2 s6:0 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 23
Executed line # 19 : VAL_COPY s10(2) s8(2) 
ST { s1:49 s10:2 s19:4 s2:4 s3:0 s4:60 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 24
Executed line # 20 : VAL_COPY 1(1) s12(1) 
ST { s1:49 s10:2 s12:1 s19:4 s2:4 s3:0 s4:60 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 25
Executed line # 21 : SUB s2(4) s12(1) s13(3) 
ST { s1:49 s10:2 s12:1 s13:3 s19:4 s2:4 s3:0 s4:60 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 26
Executed line # 22 : VAL_COPY s13(3) s11(3) 
ST { s1:49 s10:2 s11:3 s12:1 s13:3 s19:4 s2:4 s3:0 s4:60 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 27
Executed line # 23 : PUSH s3(0) 
ST { s1:49 s10:2 s11:3 s12:1 s13:3 s19:4 s2:4 s3:0 s4:60 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 0 0 0 0 } (bottom)

Step # 28
Executed line # 24 : PUSH s4(60) 
ST { s1:49 s10:2 s11:3 s12:1 s13:3 s19:4 s2:4 s3:0 s4:60 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 60 0 0 0 0 } (bottom)

Step # 29
Executed line # 25 : PUSH s2(4) 
ST { s1:49 s10:2 s11:3 s12:1 s13:3 s19:4 s2:4 s3:0 s4:60 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 30
Executed line # 26 : VAL_COPY s8(2) s2(2) 
ST { s1:49 s10:2 s11:3 s12:1 s13:3 s19:4 s2:2 s3:0 s4:60 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 31
Executed line # 27 : VAL_COPY end_return_1(28) s4(28) 
ST { s1:49 s10:2 s11:3 s12:1 s13:3 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 32
Executed line # 28 : JUMP _func_fib(7) 
ST { s1:49 s10:2 s11:3 s12:1 s13:3 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 33
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:2 s11:3 s12:1 s13:3 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 34
Executed line # 9 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:2 s11:3 s12:1 s13:3 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 35
Executed line # 10 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s10:2 s11:3 s12:1 s13:3 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 36
Executed line # 11 : JUMP_IF_0 s6(0) end_if_2(15) 
ST { s1:49 s10:2 s11:3 s12:1 s13:3 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 37
Executed line # 16 : end_if_2(15) : 
ST { s1:49 s10:2 s11:3 s12:1 s13:3 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 38
Executed line # 17 : VAL_COPY 2(2) s9(2) 
ST { s1:49 s10:2 s11:3 s12:1 s13:3 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 39
Executed line # 18 : SUB s2(2) s9(2) s10(0) 
ST { s1:49 s10:0 s11:3 s12:1 s13:3 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 40
Executed line # 19 : VAL_COPY s10(0) s8(0) 
ST { s1:49 s10:0 s11:3 s12:1 s13:3 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 41
Executed line # 20 : VAL_COPY 1(1) s12(1) 
ST { s1:49 s10:0 s11:3 s12:1 s13:3 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 42
Executed line # 21 : SUB s2(2) s12(1) s13(1) 
ST { s1:49 s10:0 s11:3 s12:1 s13:1 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 43
Executed line # 22 : VAL_COPY s13(1) s11(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 44
Executed line # 23 : PUSH s3(0) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:0 s9:2 }
Stack (top) { 0 4 60 0 0 0 0 } (bottom)

Step # 45
Executed line # 24 : PUSH s4(28) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:0 s9:2 }
Stack (top) { 28 0 4 60 0 0 0 0 } (bottom)

Step # 46
Executed line # 25 : PUSH s2(2) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:2 s3:0 s4:28 s5:2 s6:0 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 47
Executed line # 26 : VAL_COPY s8(0) s2(0) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:0 s3:0 s4:28 s5:2 s6:0 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 48
Executed line # 27 : VAL_COPY end_return_1(28) s4(28) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:0 s3:0 s4:28 s5:2 s6:0 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 49
Executed line # 28 : JUMP _func_fib(7) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:0 s3:0 s4:28 s5:2 s6:0 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 50
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:0 s3:0 s4:28 s5:2 s6:0 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 51
Executed line # 9 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:0 s3:0 s4:28 s5:2 s6:0 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 52
Executed line # 10 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:0 s3:0 s4:28 s5:2 s6:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 53
Executed line # 11 : JUMP_IF_0 s6(1) end_if_2(15) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:0 s3:0 s4:28 s5:2 s6:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 54
Executed line # 12 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:0 s3:0 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 55
Executed line # 13 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:0 s3:1 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 56
Executed line # 14 : JUMP _func_rtn_fib(50) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:0 s3:1 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 57
Executed line # 51 : _func_rtn_fib(50) : 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:0 s3:1 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 58
Executed line # 52 : JUMP s4(28) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:0 s3:1 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 59
Executed line # 29 : end_return_1(28) : 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s19:4 s2:0 s3:1 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 60
Executed line # 30 : VAL_COPY s3(1) s15(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s15:1 s19:4 s2:0 s3:1 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 61
Executed line # 31 : POP s2(2) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s15:1 s19:4 s2:2 s3:1 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 28 0 4 60 0 0 0 0 } (bottom)

Step # 62
Executed line # 32 : POP s4(28) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s15:1 s19:4 s2:2 s3:1 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 4 60 0 0 0 0 } (bottom)

Step # 63
Executed line # 33 : POP s3(0) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s15:1 s19:4 s2:2 s3:0 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 64
Executed line # 34 : VAL_COPY s15(1) s14(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:2 s3:0 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 65
Executed line # 35 : PUSH s3(0) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:2 s3:0 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 4 60 0 0 0 0 } (bottom)

Step # 66
Executed line # 36 : PUSH s4(28) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:2 s3:0 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 28 0 4 60 0 0 0 0 } (bottom)

Step # 67
Executed line # 37 : PUSH s2(2) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:2 s3:0 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 68
Executed line # 38 : VAL_COPY s11(1) s2(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:1 s3:0 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 69
Executed line # 39 : VAL_COPY end_return_2(40) s4(40) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 70
Executed line # 40 : JUMP _func_fib(7) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 71
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 72
Executed line # 9 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 73
Executed line # 10 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 74
Executed line # 11 : JUMP_IF_0 s6(1) end_if_2(15) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 75
Executed line # 12 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 76
Executed line # 13 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:1 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 77
Executed line # 14 : JUMP _func_rtn_fib(50) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:1 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 78
Executed line # 51 : _func_rtn_fib(50) : 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:1 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 79
Executed line # 52 : JUMP s4(40) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:1 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 80
Executed line # 41 : end_return_2(40) : 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s19:4 s2:1 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 81
Executed line # 42 : VAL_COPY s3(1) s17(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s17:1 s19:4 s2:1 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 2 28 0 4 60 0 0 0 0 } (bottom)

Step # 82
Executed line # 43 : POP s2(2) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s17:1 s19:4 s2:2 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 28 0 4 60 0 0 0 0 } (bottom)

Step # 83
Executed line # 44 : POP s4(28) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s17:1 s19:4 s2:2 s3:1 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 4 60 0 0 0 0 } (bottom)

Step # 84
Executed line # 45 : POP s3(0) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s17:1 s19:4 s2:2 s3:0 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 85
Executed line # 46 : VAL_COPY s17(1) s16(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s16:1 s17:1 s19:4 s2:2 s3:0 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 86
Executed line # 47 : ADD s14(1) s16(1) s18(2) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s16:1 s17:1 s18:2 s19:4 s2:2 s3:0 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 87
Executed line # 48 : VAL_COPY s18(2) s3(2) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s16:1 s17:1 s18:2 s19:4 s2:2 s3:2 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 88
Executed line # 49 : JUMP _func_rtn_fib(50) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s16:1 s17:1 s18:2 s19:4 s2:2 s3:2 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 89
Executed line # 51 : _func_rtn_fib(50) : 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s16:1 s17:1 s18:2 s19:4 s2:2 s3:2 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 90
Executed line # 52 : JUMP s4(28) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s16:1 s17:1 s18:2 s19:4 s2:2 s3:2 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 91
Executed line # 29 : end_return_1(28) : 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:1 s16:1 s17:1 s18:2 s19:4 s2:2 s3:2 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 92
Executed line # 30 : VAL_COPY s3(2) s15(2) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:2 s16:1 s17:1 s18:2 s19:4 s2:2 s3:2 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 93
Executed line # 31 : POP s2(4) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:2 s16:1 s17:1 s18:2 s19:4 s2:4 s3:2 s4:28 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 60 0 0 0 0 } (bottom)

Step # 94
Executed line # 32 : POP s4(60) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:2 s16:1 s17:1 s18:2 s19:4 s2:4 s3:2 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 0 } (bottom)

Step # 95
Executed line # 33 : POP s3(0) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:1 s15:2 s16:1 s17:1 s18:2 s19:4 s2:4 s3:0 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 96
Executed line # 34 : VAL_COPY s15(2) s14(2) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:4 s3:0 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 97
Executed line # 35 : PUSH s3(0) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:4 s3:0 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 0 } (bottom)

Step # 98
Executed line # 36 : PUSH s4(60) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:4 s3:0 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 60 0 0 0 0 } (bottom)

Step # 99
Executed line # 37 : PUSH s2(4) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:4 s3:0 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 100
Executed line # 38 : VAL_COPY s11(1) s2(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:0 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 101
Executed line # 39 : VAL_COPY end_return_2(40) s4(40) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 102
Executed line # 40 : JUMP _func_fib(7) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 103
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 104
Executed line # 9 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 105
Executed line # 10 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 106
Executed line # 11 : JUMP_IF_0 s6(1) end_if_2(15) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 107
Executed line # 12 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:0 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 108
Executed line # 13 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 109
Executed line # 14 : JUMP _func_rtn_fib(50) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 110
Executed line # 51 : _func_rtn_fib(50) : 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 111
Executed line # 52 : JUMP s4(40) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 112
Executed line # 41 : end_return_2(40) : 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 113
Executed line # 42 : VAL_COPY s3(1) s17(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:1 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 4 60 0 0 0 0 } (bottom)

Step # 114
Executed line # 43 : POP s2(4) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:4 s3:1 s4:40 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 60 0 0 0 0 } (bottom)

Step # 115
Executed line # 44 : POP s4(60) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:4 s3:1 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 0 } (bottom)

Step # 116
Executed line # 45 : POP s3(0) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:4 s3:0 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 117
Executed line # 46 : VAL_COPY s17(1) s16(1) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:2 s19:4 s2:4 s3:0 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 118
Executed line # 47 : ADD s14(2) s16(1) s18(3) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:4 s3:0 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 119
Executed line # 48 : VAL_COPY s18(3) s3(3) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:4 s3:3 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 120
Executed line # 49 : JUMP _func_rtn_fib(50) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:4 s3:3 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 121
Executed line # 51 : _func_rtn_fib(50) : 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:4 s3:3 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 122
Executed line # 52 : JUMP s4(60) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:4 s3:3 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 123
Executed line # 61 : end_return_3(60) : 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:4 s3:3 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 124
Executed line # 62 : VAL_COPY s3(3) s20(3) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:4 s20:3 s3:3 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 125
Executed line # 63 : POP s2(0) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:0 s20:3 s3:3 s4:60 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 0 } (bottom)

Step # 126
Executed line # 64 : POP s4(0) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:0 s20:3 s3:3 s4:0 s5:2 s6:1 s7:1 s8:0 s9:2 }
Stack (top) { 0 } (bottom)

Step # 127
Executed line # 65 : POP s3(0) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:0 s20:3 s3:0 s4:0 s5:2 s6:1 s7:1 s8:0 s9:2 }

Step # 128
Executed line # 66 : OUT_NUM s20(3) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:0 s20:3 s3:0 s4:0 s5:2 s6:1 s7:1 s8:0 s9:2 }

Step # 129
Executed line # 67 : OUT_CHAR 10(10) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:0 s20:3 s3:0 s4:0 s5:2 s6:1 s7:1 s8:0 s9:2 }

Step # 130
Executed line # 68 : RANDOM s21(97) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:0 s20:3 s21:97 s3:0 s4:0 s5:2 s6:1 s7:1 s8:0 s9:2 }

Step # 131
Executed line # 69 : OUT_NUM s21(97) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:0 s20:3 s21:97 s3:0 s4:0 s5:2 s6:1 s7:1 s8:0 s9:2 }

Step # 132
Executed line # 70 : OUT_CHAR 10(10) 
ST { s1:49 s10:0 s11:1 s12:1 s13:1 s14:2 s15:2 s16:1 s17:1 s18:3 s19:4 s2:0 s20:3 s21:97 s3:0 s4:0 s5:2 s6:1 s7:1 s8:0 s9:2 }

