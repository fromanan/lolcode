Step # 1
Executed line # 1 : RANDOM s1(49) 
ST { s1:49 }

Step # 2
Executed line # 2 : OUT_NUM s1(49) 
ST { s1:49 }

Step # 3
Executed line # 3 : OUT_CHAR 10(10) 
ST { s1:49 }

Step # 4
Executed line # 4 : VAL_COPY 0(0) s2(0) 
ST { s1:49 s2:0 }

Step # 5
Executed line # 5 : VAL_COPY 0(0) s3(0) 
ST { s1:49 s2:0 s3:0 }

Step # 6
Executed line # 6 : VAL_COPY 0(0) s4(0) 
ST { s1:49 s2:0 s3:0 s4:0 }

Step # 7
Executed line # 7 : JUMP _func_end_fib(50) 
ST { s1:49 s2:0 s3:0 s4:0 }

Step # 8
Executed line # 51 : _func_end_fib(50) : 
ST { s1:49 s2:0 s3:0 s4:0 }

Step # 9
Executed line # 52 : PUSH s3(0) 
ST { s1:49 s2:0 s3:0 s4:0 }
Stack (top) { 0 } (bottom)

Step # 10
Executed line # 53 : PUSH s4(0) 
ST { s1:49 s2:0 s3:0 s4:0 }
Stack (top) { 0 0 } (bottom)

Step # 11
Executed line # 54 : PUSH s2(0) 
ST { s1:49 s2:0 s3:0 s4:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 12
Executed line # 55 : VAL_COPY 8(8) s15(8) 
ST { s1:49 s15:8 s2:0 s3:0 s4:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 13
Executed line # 56 : VAL_COPY s15(8) s2(8) 
ST { s1:49 s15:8 s2:8 s3:0 s4:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 14
Executed line # 57 : VAL_COPY end_return_3(58) s4(58) 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 }
Stack (top) { 0 0 0 } (bottom)

Step # 15
Executed line # 58 : JUMP _func_fib(7) 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 }
Stack (top) { 0 0 0 } (bottom)

Step # 16
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 }
Stack (top) { 0 0 0 } (bottom)

Step # 17
Executed line # 9 : OUT_NUM s2(8) 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 }
Stack (top) { 0 0 0 } (bottom)

Step # 18
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 }
Stack (top) { 0 0 0 } (bottom)

Step # 19
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 s5:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 20
Executed line # 12 : TEST_GTR s5(2) s2(8) s6(0) 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 s5:2 s6:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 21
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 s5:2 s6:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 22
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 s5:2 s6:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 23
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 s5:2 s6:0 }
Stack (top) { 0 0 0 0 } (bottom)

Step # 24
Executed line # 20 : PUSH s4(58) 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 s5:2 s6:0 }
Stack (top) { 58 0 0 0 0 } (bottom)

Step # 25
Executed line # 21 : PUSH s2(8) 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 s5:2 s6:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 26
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 s5:2 s6:0 s8:2 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 27
Executed line # 23 : SUB s2(8) s8(2) s9(6) 
ST { s1:49 s15:8 s2:8 s3:0 s4:58 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 28
Executed line # 24 : VAL_COPY s9(6) s2(6) 
ST { s1:49 s15:8 s2:6 s3:0 s4:58 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 29
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 30
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 31
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 32
Executed line # 9 : OUT_NUM s2(6) 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 33
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 34
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 35
Executed line # 12 : TEST_GTR s5(2) s2(6) s6(0) 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 36
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 37
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 38
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 0 8 58 0 0 0 0 } (bottom)

Step # 39
Executed line # 20 : PUSH s4(26) 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 26 0 8 58 0 0 0 0 } (bottom)

Step # 40
Executed line # 21 : PUSH s2(6) 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 41
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:6 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 42
Executed line # 23 : SUB s2(6) s8(2) s9(4) 
ST { s1:49 s15:8 s2:6 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 43
Executed line # 24 : VAL_COPY s9(4) s2(4) 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 44
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 45
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 46
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 47
Executed line # 9 : OUT_NUM s2(4) 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 48
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 49
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 50
Executed line # 12 : TEST_GTR s5(2) s2(4) s6(0) 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 51
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 52
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 53
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 54
Executed line # 20 : PUSH s4(26) 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 55
Executed line # 21 : PUSH s2(4) 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 56
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:4 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 57
Executed line # 23 : SUB s2(4) s8(2) s9(2) 
ST { s1:49 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 58
Executed line # 24 : VAL_COPY s9(2) s2(2) 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 59
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 60
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 61
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 62
Executed line # 9 : OUT_NUM s2(2) 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 63
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 64
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 65
Executed line # 12 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 66
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 67
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 68
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 69
Executed line # 20 : PUSH s4(26) 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 70
Executed line # 21 : PUSH s2(2) 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 71
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:2 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 72
Executed line # 23 : SUB s2(2) s8(2) s9(0) 
ST { s1:49 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 73
Executed line # 24 : VAL_COPY s9(0) s2(0) 
ST { s1:49 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 74
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 75
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 76
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 77
Executed line # 9 : OUT_NUM s2(0) 
ST { s1:49 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 78
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 79
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 80
Executed line # 12 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 81
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 82
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 83
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 84
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 85
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 86
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 87
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 88
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 89
Executed line # 29 : POP s2(2) 
ST { s1:49 s10:1 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 90
Executed line # 30 : POP s4(26) 
ST { s1:49 s10:1 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 91
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 92
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 93
Executed line # 33 : PUSH s4(26) 
ST { s1:49 s10:1 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 94
Executed line # 34 : PUSH s2(2) 
ST { s1:49 s10:1 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 95
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 96
Executed line # 36 : SUB s2(2) s11(1) s12(1) 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 97
Executed line # 37 : VAL_COPY s12(1) s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 98
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 99
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 100
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 101
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 102
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 103
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 104
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 105
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 106
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 107
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 108
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 109
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 110
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 111
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 112
Executed line # 41 : VAL_COPY s3(1) s13(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 113
Executed line # 42 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 114
Executed line # 43 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 115
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 116
Executed line # 45 : ADD s10(1) s13(1) s14(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 117
Executed line # 46 : VAL_COPY s14(2) s3(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 118
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 119
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 120
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 121
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 122
Executed line # 28 : VAL_COPY s3(2) s10(2) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 123
Executed line # 29 : POP s2(4) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 124
Executed line # 30 : POP s4(26) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 125
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 126
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 127
Executed line # 33 : PUSH s4(26) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 128
Executed line # 34 : PUSH s2(4) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 129
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 130
Executed line # 36 : SUB s2(4) s11(1) s12(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 131
Executed line # 37 : VAL_COPY s12(3) s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 132
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 133
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 134
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 135
Executed line # 9 : OUT_NUM s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 136
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 137
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 138
Executed line # 12 : TEST_GTR s5(2) s2(3) s6(0) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 139
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 140
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 141
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 142
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 143
Executed line # 21 : PUSH s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 144
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 145
Executed line # 23 : SUB s2(3) s8(2) s9(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 146
Executed line # 24 : VAL_COPY s9(1) s2(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 147
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 148
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 149
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 150
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 151
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 152
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 153
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 154
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 155
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 156
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 157
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 158
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 159
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 160
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 161
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 162
Executed line # 29 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 163
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 164
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 165
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 166
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 167
Executed line # 34 : PUSH s2(3) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 168
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 169
Executed line # 36 : SUB s2(3) s11(1) s12(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 170
Executed line # 37 : VAL_COPY s12(2) s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 171
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 172
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 173
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 174
Executed line # 9 : OUT_NUM s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 175
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 176
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 177
Executed line # 12 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 178
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 179
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 180
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 181
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 182
Executed line # 21 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 183
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 184
Executed line # 23 : SUB s2(2) s8(2) s9(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 185
Executed line # 24 : VAL_COPY s9(0) s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 186
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 187
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 188
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 189
Executed line # 9 : OUT_NUM s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 190
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 191
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 192
Executed line # 12 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 193
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 194
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 195
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 196
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 197
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 198
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 199
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 200
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 201
Executed line # 29 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 202
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 203
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 204
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 205
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 206
Executed line # 34 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 207
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 208
Executed line # 36 : SUB s2(2) s11(1) s12(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 209
Executed line # 37 : VAL_COPY s12(1) s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 210
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 211
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 212
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 213
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 214
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 215
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 216
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 217
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 218
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 219
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 220
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 221
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 222
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 223
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 224
Executed line # 41 : VAL_COPY s3(1) s13(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 225
Executed line # 42 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 226
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 227
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 228
Executed line # 45 : ADD s10(1) s13(1) s14(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 229
Executed line # 46 : VAL_COPY s14(2) s3(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 230
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 231
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 232
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 233
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 234
Executed line # 41 : VAL_COPY s3(2) s13(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 235
Executed line # 42 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 236
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 237
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 238
Executed line # 45 : ADD s10(1) s13(2) s14(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 239
Executed line # 46 : VAL_COPY s14(3) s3(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 240
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 241
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 242
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 243
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 244
Executed line # 41 : VAL_COPY s3(3) s13(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 245
Executed line # 42 : POP s2(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 246
Executed line # 43 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 247
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 248
Executed line # 45 : ADD s10(1) s13(3) s14(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 249
Executed line # 46 : VAL_COPY s14(4) s3(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 250
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 251
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 252
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 253
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 254
Executed line # 28 : VAL_COPY s3(4) s10(4) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 255
Executed line # 29 : POP s2(6) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 8 58 0 0 0 0 } (bottom)

Step # 256
Executed line # 30 : POP s4(26) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 8 58 0 0 0 0 } (bottom)

Step # 257
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 258
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 8 58 0 0 0 0 } (bottom)

Step # 259
Executed line # 33 : PUSH s4(26) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 8 58 0 0 0 0 } (bottom)

Step # 260
Executed line # 34 : PUSH s2(6) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 261
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 262
Executed line # 36 : SUB s2(6) s11(1) s12(5) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:6 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 263
Executed line # 37 : VAL_COPY s12(5) s2(5) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 264
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 265
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 266
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 267
Executed line # 9 : OUT_NUM s2(5) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 268
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 269
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 270
Executed line # 12 : TEST_GTR s5(2) s2(5) s6(0) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 271
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 272
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 273
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 274
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 275
Executed line # 21 : PUSH s2(5) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 276
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 277
Executed line # 23 : SUB s2(5) s8(2) s9(3) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 278
Executed line # 24 : VAL_COPY s9(3) s2(3) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 279
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 280
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 281
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 282
Executed line # 9 : OUT_NUM s2(3) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 283
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 284
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 285
Executed line # 12 : TEST_GTR s5(2) s2(3) s6(0) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 286
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 287
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 288
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 289
Executed line # 20 : PUSH s4(26) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 290
Executed line # 21 : PUSH s2(3) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 291
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 292
Executed line # 23 : SUB s2(3) s8(2) s9(1) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 293
Executed line # 24 : VAL_COPY s9(1) s2(1) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 294
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 295
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 296
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 297
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 298
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 299
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 300
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 301
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 302
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 303
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 304
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 305
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 306
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 307
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 308
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 309
Executed line # 29 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 310
Executed line # 30 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 311
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 312
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 313
Executed line # 33 : PUSH s4(26) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 314
Executed line # 34 : PUSH s2(3) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 315
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 316
Executed line # 36 : SUB s2(3) s11(1) s12(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 317
Executed line # 37 : VAL_COPY s12(2) s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 318
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 319
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 320
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 321
Executed line # 9 : OUT_NUM s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 322
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 323
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 324
Executed line # 12 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 325
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 326
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 327
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 328
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 329
Executed line # 21 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 330
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 331
Executed line # 23 : SUB s2(2) s8(2) s9(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 332
Executed line # 24 : VAL_COPY s9(0) s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 333
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 334
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 335
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 336
Executed line # 9 : OUT_NUM s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 337
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 338
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 339
Executed line # 12 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 340
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 341
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 342
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 343
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 344
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 345
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 346
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 347
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 348
Executed line # 29 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 349
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 350
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 351
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 352
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 353
Executed line # 34 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 354
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 355
Executed line # 36 : SUB s2(2) s11(1) s12(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 356
Executed line # 37 : VAL_COPY s12(1) s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 357
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 358
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 359
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 360
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 361
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 362
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 363
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 364
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 365
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 366
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 367
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 368
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 369
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 370
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 371
Executed line # 41 : VAL_COPY s3(1) s13(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:4 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 372
Executed line # 42 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:4 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 373
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:4 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 374
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 375
Executed line # 45 : ADD s10(1) s13(1) s14(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 376
Executed line # 46 : VAL_COPY s14(2) s3(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 377
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 378
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 379
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 380
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 381
Executed line # 41 : VAL_COPY s3(2) s13(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 382
Executed line # 42 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 383
Executed line # 43 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 384
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 385
Executed line # 45 : ADD s10(1) s13(2) s14(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 386
Executed line # 46 : VAL_COPY s14(3) s3(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 387
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 388
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 389
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 390
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 391
Executed line # 28 : VAL_COPY s3(3) s10(3) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 392
Executed line # 29 : POP s2(5) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 393
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 394
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 395
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 396
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 397
Executed line # 34 : PUSH s2(5) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 398
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 399
Executed line # 36 : SUB s2(5) s11(1) s12(4) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 400
Executed line # 37 : VAL_COPY s12(4) s2(4) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 401
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 402
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 403
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 404
Executed line # 9 : OUT_NUM s2(4) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 405
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 406
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 407
Executed line # 12 : TEST_GTR s5(2) s2(4) s6(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 408
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 409
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 410
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 411
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 412
Executed line # 21 : PUSH s2(4) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 413
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 414
Executed line # 23 : SUB s2(4) s8(2) s9(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 415
Executed line # 24 : VAL_COPY s9(2) s2(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 416
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 417
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 418
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 419
Executed line # 9 : OUT_NUM s2(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 420
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 421
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 422
Executed line # 12 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 423
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 424
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 425
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 426
Executed line # 20 : PUSH s4(26) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 427
Executed line # 21 : PUSH s2(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 428
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 429
Executed line # 23 : SUB s2(2) s8(2) s9(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 430
Executed line # 24 : VAL_COPY s9(0) s2(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 431
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 432
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 433
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 434
Executed line # 9 : OUT_NUM s2(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 435
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 436
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 437
Executed line # 12 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 438
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 439
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 440
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 441
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 442
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 443
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 444
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 445
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 446
Executed line # 29 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 447
Executed line # 30 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 448
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 449
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 450
Executed line # 33 : PUSH s4(26) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 451
Executed line # 34 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 452
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 453
Executed line # 36 : SUB s2(2) s11(1) s12(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 454
Executed line # 37 : VAL_COPY s12(1) s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 455
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 456
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 457
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 458
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 459
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 460
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 461
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 462
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 463
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 464
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 465
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 466
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 467
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 468
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 469
Executed line # 41 : VAL_COPY s3(1) s13(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 470
Executed line # 42 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:3 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 471
Executed line # 43 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:3 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 472
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 473
Executed line # 45 : ADD s10(1) s13(1) s14(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 474
Executed line # 46 : VAL_COPY s14(2) s3(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 475
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 476
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 477
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 478
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 479
Executed line # 28 : VAL_COPY s3(2) s10(2) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 480
Executed line # 29 : POP s2(4) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 481
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 482
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 483
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 484
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 485
Executed line # 34 : PUSH s2(4) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 486
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 487
Executed line # 36 : SUB s2(4) s11(1) s12(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 488
Executed line # 37 : VAL_COPY s12(3) s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 489
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 490
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 491
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 492
Executed line # 9 : OUT_NUM s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 493
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 494
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 495
Executed line # 12 : TEST_GTR s5(2) s2(3) s6(0) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 496
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 497
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 498
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 499
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 500
Executed line # 21 : PUSH s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 501
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 502
Executed line # 23 : SUB s2(3) s8(2) s9(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 503
Executed line # 24 : VAL_COPY s9(1) s2(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 504
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 505
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 506
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 507
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 508
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 509
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 510
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 511
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 512
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 513
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 514
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 515
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 516
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 517
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 518
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 519
Executed line # 29 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 520
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 521
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 522
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 523
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 524
Executed line # 34 : PUSH s2(3) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 525
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 526
Executed line # 36 : SUB s2(3) s11(1) s12(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 527
Executed line # 37 : VAL_COPY s12(2) s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 528
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 529
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 530
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 531
Executed line # 9 : OUT_NUM s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 532
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 533
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 534
Executed line # 12 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 535
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 536
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 537
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 538
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 539
Executed line # 21 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 540
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 541
Executed line # 23 : SUB s2(2) s8(2) s9(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 542
Executed line # 24 : VAL_COPY s9(0) s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 543
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 544
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 545
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 546
Executed line # 9 : OUT_NUM s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 547
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 548
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 549
Executed line # 12 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 550
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 551
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 552
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 553
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 554
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 555
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 556
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 557
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 558
Executed line # 29 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 559
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 560
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 561
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 562
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 563
Executed line # 34 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 564
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 565
Executed line # 36 : SUB s2(2) s11(1) s12(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 566
Executed line # 37 : VAL_COPY s12(1) s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 567
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 568
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 569
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 570
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 571
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 572
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 573
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 574
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 575
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 576
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 577
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 578
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 579
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 580
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 581
Executed line # 41 : VAL_COPY s3(1) s13(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 582
Executed line # 42 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 583
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 584
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 585
Executed line # 45 : ADD s10(1) s13(1) s14(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 586
Executed line # 46 : VAL_COPY s14(2) s3(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 587
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 588
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 589
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 590
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 591
Executed line # 41 : VAL_COPY s3(2) s13(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 592
Executed line # 42 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 593
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 594
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 595
Executed line # 45 : ADD s10(1) s13(2) s14(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 596
Executed line # 46 : VAL_COPY s14(3) s3(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 597
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 598
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 599
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 600
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 601
Executed line # 41 : VAL_COPY s3(3) s13(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 602
Executed line # 42 : POP s2(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 603
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 604
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 605
Executed line # 45 : ADD s10(1) s13(3) s14(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 606
Executed line # 46 : VAL_COPY s14(4) s3(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 607
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 608
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 609
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 610
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 611
Executed line # 41 : VAL_COPY s3(4) s13(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 612
Executed line # 42 : POP s2(5) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:4 s15:8 s2:5 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 613
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:4 s15:8 s2:5 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 614
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 615
Executed line # 45 : ADD s10(1) s13(4) s14(5) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 616
Executed line # 46 : VAL_COPY s14(5) s3(5) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 617
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 618
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 619
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 620
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 621
Executed line # 41 : VAL_COPY s3(5) s13(5) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:5 s15:8 s2:5 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 26 0 8 58 0 0 0 0 } (bottom)

Step # 622
Executed line # 42 : POP s2(6) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:5 s15:8 s2:6 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 8 58 0 0 0 0 } (bottom)

Step # 623
Executed line # 43 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:5 s15:8 s2:6 s3:5 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 8 58 0 0 0 0 } (bottom)

Step # 624
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:5 s15:8 s2:6 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 625
Executed line # 45 : ADD s10(1) s13(5) s14(6) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:6 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 626
Executed line # 46 : VAL_COPY s14(6) s3(6) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:6 s3:6 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 627
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:6 s3:6 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 628
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:6 s3:6 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 629
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:6 s3:6 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 630
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:6 s3:6 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 631
Executed line # 28 : VAL_COPY s3(6) s10(6) 
ST { s1:49 s10:6 s11:1 s12:1 s13:5 s14:6 s15:8 s2:6 s3:6 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 632
Executed line # 29 : POP s2(8) 
ST { s1:49 s10:6 s11:1 s12:1 s13:5 s14:6 s15:8 s2:8 s3:6 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 58 0 0 0 0 } (bottom)

Step # 633
Executed line # 30 : POP s4(58) 
ST { s1:49 s10:6 s11:1 s12:1 s13:5 s14:6 s15:8 s2:8 s3:6 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 0 0 0 } (bottom)

Step # 634
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:6 s11:1 s12:1 s13:5 s14:6 s15:8 s2:8 s3:0 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 635
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:6 s11:1 s12:1 s13:5 s14:6 s15:8 s2:8 s3:0 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 0 0 0 } (bottom)

Step # 636
Executed line # 33 : PUSH s4(58) 
ST { s1:49 s10:6 s11:1 s12:1 s13:5 s14:6 s15:8 s2:8 s3:0 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 58 0 0 0 0 } (bottom)

Step # 637
Executed line # 34 : PUSH s2(8) 
ST { s1:49 s10:6 s11:1 s12:1 s13:5 s14:6 s15:8 s2:8 s3:0 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 638
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:6 s11:1 s12:1 s13:5 s14:6 s15:8 s2:8 s3:0 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 639
Executed line # 36 : SUB s2(8) s11(1) s12(7) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:8 s3:0 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 640
Executed line # 37 : VAL_COPY s12(7) s2(7) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 641
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 642
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 643
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 644
Executed line # 9 : OUT_NUM s2(7) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 645
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 646
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 647
Executed line # 12 : TEST_GTR s5(2) s2(7) s6(0) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 648
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 649
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 650
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 0 8 58 0 0 0 0 } (bottom)

Step # 651
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 8 58 0 0 0 0 } (bottom)

Step # 652
Executed line # 21 : PUSH s2(7) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 653
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 654
Executed line # 23 : SUB s2(7) s8(2) s9(5) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 655
Executed line # 24 : VAL_COPY s9(5) s2(5) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 656
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 657
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 658
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 659
Executed line # 9 : OUT_NUM s2(5) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 660
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 661
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 662
Executed line # 12 : TEST_GTR s5(2) s2(5) s6(0) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 663
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 664
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 665
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 666
Executed line # 20 : PUSH s4(26) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 667
Executed line # 21 : PUSH s2(5) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 668
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:5 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 669
Executed line # 23 : SUB s2(5) s8(2) s9(3) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:5 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 670
Executed line # 24 : VAL_COPY s9(3) s2(3) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 671
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 672
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 673
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 674
Executed line # 9 : OUT_NUM s2(3) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 675
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 676
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 677
Executed line # 12 : TEST_GTR s5(2) s2(3) s6(0) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 678
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 679
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 680
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 681
Executed line # 20 : PUSH s4(26) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 682
Executed line # 21 : PUSH s2(3) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 683
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 684
Executed line # 23 : SUB s2(3) s8(2) s9(1) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 685
Executed line # 24 : VAL_COPY s9(1) s2(1) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 686
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 687
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 688
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 689
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 690
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 691
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 692
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 693
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 694
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 695
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 696
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 697
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 698
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 699
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:6 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 700
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:7 s13:5 s14:6 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 701
Executed line # 29 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 702
Executed line # 30 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 703
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 704
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 705
Executed line # 33 : PUSH s4(26) 
ST { s1:49 s10:1 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 706
Executed line # 34 : PUSH s2(3) 
ST { s1:49 s10:1 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 707
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:7 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 708
Executed line # 36 : SUB s2(3) s11(1) s12(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 709
Executed line # 37 : VAL_COPY s12(2) s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 710
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 711
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 712
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 713
Executed line # 9 : OUT_NUM s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 714
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 715
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 716
Executed line # 12 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 717
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 718
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 719
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 720
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 721
Executed line # 21 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 722
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 723
Executed line # 23 : SUB s2(2) s8(2) s9(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 724
Executed line # 24 : VAL_COPY s9(0) s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 725
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 726
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 727
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 728
Executed line # 9 : OUT_NUM s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 729
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 730
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 731
Executed line # 12 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 732
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 733
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 734
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 735
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 736
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 737
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 738
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 739
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 740
Executed line # 29 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 741
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 742
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 743
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 744
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 745
Executed line # 34 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 746
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 747
Executed line # 36 : SUB s2(2) s11(1) s12(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 748
Executed line # 37 : VAL_COPY s12(1) s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 749
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 750
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 751
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 752
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 753
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 754
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 755
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 756
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 757
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 758
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 759
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 760
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 761
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 762
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 763
Executed line # 41 : VAL_COPY s3(1) s13(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:6 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 764
Executed line # 42 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:6 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 765
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:6 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 766
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:6 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 767
Executed line # 45 : ADD s10(1) s13(1) s14(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 768
Executed line # 46 : VAL_COPY s14(2) s3(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 769
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 770
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 771
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 772
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 773
Executed line # 41 : VAL_COPY s3(2) s13(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 774
Executed line # 42 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 775
Executed line # 43 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 776
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 777
Executed line # 45 : ADD s10(1) s13(2) s14(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 778
Executed line # 46 : VAL_COPY s14(3) s3(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 779
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 780
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 781
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 782
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 783
Executed line # 28 : VAL_COPY s3(3) s10(3) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 784
Executed line # 29 : POP s2(5) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 785
Executed line # 30 : POP s4(26) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 786
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 787
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 788
Executed line # 33 : PUSH s4(26) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 789
Executed line # 34 : PUSH s2(5) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 790
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 791
Executed line # 36 : SUB s2(5) s11(1) s12(4) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:5 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 792
Executed line # 37 : VAL_COPY s12(4) s2(4) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 793
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 794
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 795
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 796
Executed line # 9 : OUT_NUM s2(4) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 797
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 798
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 799
Executed line # 12 : TEST_GTR s5(2) s2(4) s6(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 800
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 801
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 802
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 803
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 804
Executed line # 21 : PUSH s2(4) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 805
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 806
Executed line # 23 : SUB s2(4) s8(2) s9(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 807
Executed line # 24 : VAL_COPY s9(2) s2(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 808
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 809
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 810
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 811
Executed line # 9 : OUT_NUM s2(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 812
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 813
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 814
Executed line # 12 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 815
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 816
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 817
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 818
Executed line # 20 : PUSH s4(26) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 819
Executed line # 21 : PUSH s2(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 820
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 821
Executed line # 23 : SUB s2(2) s8(2) s9(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 822
Executed line # 24 : VAL_COPY s9(0) s2(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 823
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 824
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 825
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 826
Executed line # 9 : OUT_NUM s2(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 827
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 828
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 829
Executed line # 12 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 830
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 831
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 832
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 833
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 834
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 835
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 836
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 837
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 838
Executed line # 29 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 839
Executed line # 30 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 840
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 841
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 842
Executed line # 33 : PUSH s4(26) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 843
Executed line # 34 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 844
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 845
Executed line # 36 : SUB s2(2) s11(1) s12(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 846
Executed line # 37 : VAL_COPY s12(1) s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 847
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 848
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 849
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 850
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 851
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 852
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 853
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 854
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 855
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 856
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 857
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 858
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 859
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 860
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 861
Executed line # 41 : VAL_COPY s3(1) s13(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 862
Executed line # 42 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:3 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 863
Executed line # 43 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:3 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 864
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 865
Executed line # 45 : ADD s10(1) s13(1) s14(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 866
Executed line # 46 : VAL_COPY s14(2) s3(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 867
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 868
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 869
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 870
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 871
Executed line # 28 : VAL_COPY s3(2) s10(2) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 872
Executed line # 29 : POP s2(4) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 873
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 874
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 875
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 876
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 877
Executed line # 34 : PUSH s2(4) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 878
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 879
Executed line # 36 : SUB s2(4) s11(1) s12(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 880
Executed line # 37 : VAL_COPY s12(3) s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 881
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 882
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 883
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 884
Executed line # 9 : OUT_NUM s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 885
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 886
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 887
Executed line # 12 : TEST_GTR s5(2) s2(3) s6(0) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 888
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 889
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 890
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 891
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 892
Executed line # 21 : PUSH s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 893
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 894
Executed line # 23 : SUB s2(3) s8(2) s9(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 895
Executed line # 24 : VAL_COPY s9(1) s2(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 896
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 897
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 898
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 899
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 900
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 901
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 902
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 903
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 904
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 905
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 906
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 907
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 908
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 909
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 910
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 911
Executed line # 29 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 912
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 913
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 914
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 915
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 916
Executed line # 34 : PUSH s2(3) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 917
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 918
Executed line # 36 : SUB s2(3) s11(1) s12(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 919
Executed line # 37 : VAL_COPY s12(2) s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 920
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 921
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 922
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 923
Executed line # 9 : OUT_NUM s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 924
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 925
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 926
Executed line # 12 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 927
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 928
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 929
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 930
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 931
Executed line # 21 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 932
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 933
Executed line # 23 : SUB s2(2) s8(2) s9(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 934
Executed line # 24 : VAL_COPY s9(0) s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 935
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 936
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 937
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 938
Executed line # 9 : OUT_NUM s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 939
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 940
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 941
Executed line # 12 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 942
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 943
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 944
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 945
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 946
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 947
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 948
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 949
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 950
Executed line # 29 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 951
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 952
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 953
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 954
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 955
Executed line # 34 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 956
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 957
Executed line # 36 : SUB s2(2) s11(1) s12(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 958
Executed line # 37 : VAL_COPY s12(1) s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 959
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 960
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 961
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 962
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 963
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 964
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 965
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 966
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 967
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 968
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 969
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 970
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 971
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 972
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 973
Executed line # 41 : VAL_COPY s3(1) s13(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 974
Executed line # 42 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 975
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 976
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 977
Executed line # 45 : ADD s10(1) s13(1) s14(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 978
Executed line # 46 : VAL_COPY s14(2) s3(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 979
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 980
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 981
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 982
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 983
Executed line # 41 : VAL_COPY s3(2) s13(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 984
Executed line # 42 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 985
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 986
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 987
Executed line # 45 : ADD s10(1) s13(2) s14(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 988
Executed line # 46 : VAL_COPY s14(3) s3(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 989
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 990
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 991
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 992
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 993
Executed line # 41 : VAL_COPY s3(3) s13(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 994
Executed line # 42 : POP s2(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 995
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 996
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 997
Executed line # 45 : ADD s10(1) s13(3) s14(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 998
Executed line # 46 : VAL_COPY s14(4) s3(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 999
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1000
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1001
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1002
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1003
Executed line # 41 : VAL_COPY s3(4) s13(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1004
Executed line # 42 : POP s2(5) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:4 s15:8 s2:5 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1005
Executed line # 43 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:4 s15:8 s2:5 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1006
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:4 s15:8 s2:5 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1007
Executed line # 45 : ADD s10(1) s13(4) s14(5) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1008
Executed line # 46 : VAL_COPY s14(5) s3(5) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1009
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1010
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1011
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1012
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1013
Executed line # 28 : VAL_COPY s3(5) s10(5) 
ST { s1:49 s10:5 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1014
Executed line # 29 : POP s2(7) 
ST { s1:49 s10:5 s11:1 s12:1 s13:4 s14:5 s15:8 s2:7 s3:5 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 8 58 0 0 0 0 } (bottom)

Step # 1015
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:5 s11:1 s12:1 s13:4 s14:5 s15:8 s2:7 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 8 58 0 0 0 0 } (bottom)

Step # 1016
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:5 s11:1 s12:1 s13:4 s14:5 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 1017
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:5 s11:1 s12:1 s13:4 s14:5 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 8 58 0 0 0 0 } (bottom)

Step # 1018
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:5 s11:1 s12:1 s13:4 s14:5 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 8 58 0 0 0 0 } (bottom)

Step # 1019
Executed line # 34 : PUSH s2(7) 
ST { s1:49 s10:5 s11:1 s12:1 s13:4 s14:5 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1020
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:5 s11:1 s12:1 s13:4 s14:5 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1021
Executed line # 36 : SUB s2(7) s11(1) s12(6) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1022
Executed line # 37 : VAL_COPY s12(6) s2(6) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1023
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1024
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1025
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1026
Executed line # 9 : OUT_NUM s2(6) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1027
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1028
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1029
Executed line # 12 : TEST_GTR s5(2) s2(6) s6(0) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1030
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1031
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1032
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1033
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1034
Executed line # 21 : PUSH s2(6) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1035
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1036
Executed line # 23 : SUB s2(6) s8(2) s9(4) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1037
Executed line # 24 : VAL_COPY s9(4) s2(4) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1038
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1039
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1040
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1041
Executed line # 9 : OUT_NUM s2(4) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1042
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1043
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1044
Executed line # 12 : TEST_GTR s5(2) s2(4) s6(0) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1045
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1046
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1047
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1048
Executed line # 20 : PUSH s4(26) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1049
Executed line # 21 : PUSH s2(4) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1050
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:4 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1051
Executed line # 23 : SUB s2(4) s8(2) s9(2) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:4 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1052
Executed line # 24 : VAL_COPY s9(2) s2(2) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1053
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1054
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1055
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1056
Executed line # 9 : OUT_NUM s2(2) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1057
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1058
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1059
Executed line # 12 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1060
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1061
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1062
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1063
Executed line # 20 : PUSH s4(26) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1064
Executed line # 21 : PUSH s2(2) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1065
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1066
Executed line # 23 : SUB s2(2) s8(2) s9(0) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1067
Executed line # 24 : VAL_COPY s9(0) s2(0) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1068
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1069
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1070
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1071
Executed line # 9 : OUT_NUM s2(0) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1072
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1073
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1074
Executed line # 12 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1075
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1076
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1077
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1078
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1079
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1080
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1081
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:5 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1082
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:6 s13:4 s14:5 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1083
Executed line # 29 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1084
Executed line # 30 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1085
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1086
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1087
Executed line # 33 : PUSH s4(26) 
ST { s1:49 s10:1 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1088
Executed line # 34 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1089
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:6 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1090
Executed line # 36 : SUB s2(2) s11(1) s12(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1091
Executed line # 37 : VAL_COPY s12(1) s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1092
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1093
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1094
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1095
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1096
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1097
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1098
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1099
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1100
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1101
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1102
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1103
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1104
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1105
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1106
Executed line # 41 : VAL_COPY s3(1) s13(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:5 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1107
Executed line # 42 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:5 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1108
Executed line # 43 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:5 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1109
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:5 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1110
Executed line # 45 : ADD s10(1) s13(1) s14(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1111
Executed line # 46 : VAL_COPY s14(2) s3(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1112
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1113
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1114
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1115
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1116
Executed line # 28 : VAL_COPY s3(2) s10(2) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1117
Executed line # 29 : POP s2(4) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1118
Executed line # 30 : POP s4(26) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1119
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1120
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1121
Executed line # 33 : PUSH s4(26) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1122
Executed line # 34 : PUSH s2(4) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1123
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1124
Executed line # 36 : SUB s2(4) s11(1) s12(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1125
Executed line # 37 : VAL_COPY s12(3) s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1126
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1127
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1128
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1129
Executed line # 9 : OUT_NUM s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1130
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1131
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1132
Executed line # 12 : TEST_GTR s5(2) s2(3) s6(0) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1133
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1134
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1135
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1136
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1137
Executed line # 21 : PUSH s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1138
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1139
Executed line # 23 : SUB s2(3) s8(2) s9(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1140
Executed line # 24 : VAL_COPY s9(1) s2(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1141
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1142
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1143
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1144
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1145
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1146
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1147
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1148
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1149
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1150
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1151
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1152
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1153
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1154
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1155
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1156
Executed line # 29 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1157
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1158
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1159
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1160
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1161
Executed line # 34 : PUSH s2(3) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1162
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1163
Executed line # 36 : SUB s2(3) s11(1) s12(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1164
Executed line # 37 : VAL_COPY s12(2) s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1165
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1166
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1167
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1168
Executed line # 9 : OUT_NUM s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1169
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1170
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1171
Executed line # 12 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1172
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1173
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1174
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1175
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1176
Executed line # 21 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1177
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1178
Executed line # 23 : SUB s2(2) s8(2) s9(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1179
Executed line # 24 : VAL_COPY s9(0) s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1180
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1181
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1182
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1183
Executed line # 9 : OUT_NUM s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1184
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1185
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1186
Executed line # 12 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1187
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1188
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1189
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1190
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1191
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1192
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1193
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1194
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1195
Executed line # 29 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1196
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1197
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1198
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1199
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1200
Executed line # 34 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1201
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1202
Executed line # 36 : SUB s2(2) s11(1) s12(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1203
Executed line # 37 : VAL_COPY s12(1) s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1204
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1205
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1206
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1207
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1208
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1209
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1210
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1211
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1212
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1213
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1214
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1215
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1216
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1217
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1218
Executed line # 41 : VAL_COPY s3(1) s13(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1219
Executed line # 42 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1220
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1221
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1222
Executed line # 45 : ADD s10(1) s13(1) s14(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1223
Executed line # 46 : VAL_COPY s14(2) s3(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1224
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1225
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1226
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1227
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1228
Executed line # 41 : VAL_COPY s3(2) s13(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1229
Executed line # 42 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1230
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1231
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1232
Executed line # 45 : ADD s10(1) s13(2) s14(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1233
Executed line # 46 : VAL_COPY s14(3) s3(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1234
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1235
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1236
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1237
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1238
Executed line # 41 : VAL_COPY s3(3) s13(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1239
Executed line # 42 : POP s2(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1240
Executed line # 43 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1241
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1242
Executed line # 45 : ADD s10(1) s13(3) s14(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1243
Executed line # 46 : VAL_COPY s14(4) s3(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1244
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1245
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1246
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1247
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1248
Executed line # 28 : VAL_COPY s3(4) s10(4) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1249
Executed line # 29 : POP s2(6) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:4 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1250
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1251
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1252
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1253
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1254
Executed line # 34 : PUSH s2(6) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1255
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:4 s11:1 s12:1 s13:3 s14:4 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1256
Executed line # 36 : SUB s2(6) s11(1) s12(5) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1257
Executed line # 37 : VAL_COPY s12(5) s2(5) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1258
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1259
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1260
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1261
Executed line # 9 : OUT_NUM s2(5) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1262
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1263
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1264
Executed line # 12 : TEST_GTR s5(2) s2(5) s6(0) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1265
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1266
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1267
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1268
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1269
Executed line # 21 : PUSH s2(5) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1270
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1271
Executed line # 23 : SUB s2(5) s8(2) s9(3) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1272
Executed line # 24 : VAL_COPY s9(3) s2(3) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1273
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1274
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1275
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1276
Executed line # 9 : OUT_NUM s2(3) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1277
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1278
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1279
Executed line # 12 : TEST_GTR s5(2) s2(3) s6(0) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1280
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1281
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1282
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1283
Executed line # 20 : PUSH s4(26) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1284
Executed line # 21 : PUSH s2(3) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1285
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:3 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1286
Executed line # 23 : SUB s2(3) s8(2) s9(1) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1287
Executed line # 24 : VAL_COPY s9(1) s2(1) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1288
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1289
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1290
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1291
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1292
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1293
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1294
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1295
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1296
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1297
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1298
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1299
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1300
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1301
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:4 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1302
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1303
Executed line # 29 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1304
Executed line # 30 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1305
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1306
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1307
Executed line # 33 : PUSH s4(26) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1308
Executed line # 34 : PUSH s2(3) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1309
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:5 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1310
Executed line # 36 : SUB s2(3) s11(1) s12(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1311
Executed line # 37 : VAL_COPY s12(2) s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1312
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1313
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1314
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1315
Executed line # 9 : OUT_NUM s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1316
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1317
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1318
Executed line # 12 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1319
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1320
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1321
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1322
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1323
Executed line # 21 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1324
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1325
Executed line # 23 : SUB s2(2) s8(2) s9(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1326
Executed line # 24 : VAL_COPY s9(0) s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1327
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1328
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1329
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1330
Executed line # 9 : OUT_NUM s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1331
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1332
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1333
Executed line # 12 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1334
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1335
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1336
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1337
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1338
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1339
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1340
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1341
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1342
Executed line # 29 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1343
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1344
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1345
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1346
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1347
Executed line # 34 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1348
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1349
Executed line # 36 : SUB s2(2) s11(1) s12(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1350
Executed line # 37 : VAL_COPY s12(1) s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1351
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1352
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1353
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1354
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1355
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1356
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1357
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1358
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1359
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1360
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1361
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1362
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1363
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1364
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1365
Executed line # 41 : VAL_COPY s3(1) s13(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:4 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1366
Executed line # 42 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:4 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1367
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:4 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1368
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:4 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1369
Executed line # 45 : ADD s10(1) s13(1) s14(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1370
Executed line # 46 : VAL_COPY s14(2) s3(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1371
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1372
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1373
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1374
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1375
Executed line # 41 : VAL_COPY s3(2) s13(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1376
Executed line # 42 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1377
Executed line # 43 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1378
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1379
Executed line # 45 : ADD s10(1) s13(2) s14(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1380
Executed line # 46 : VAL_COPY s14(3) s3(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1381
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1382
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1383
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1384
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1385
Executed line # 28 : VAL_COPY s3(3) s10(3) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1386
Executed line # 29 : POP s2(5) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:3 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1387
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1388
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1389
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1390
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1391
Executed line # 34 : PUSH s2(5) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1392
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:3 s11:1 s12:1 s13:2 s14:3 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1393
Executed line # 36 : SUB s2(5) s11(1) s12(4) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1394
Executed line # 37 : VAL_COPY s12(4) s2(4) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1395
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1396
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1397
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1398
Executed line # 9 : OUT_NUM s2(4) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1399
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1400
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1401
Executed line # 12 : TEST_GTR s5(2) s2(4) s6(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1402
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1403
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1404
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1405
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1406
Executed line # 21 : PUSH s2(4) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1407
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1408
Executed line # 23 : SUB s2(4) s8(2) s9(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1409
Executed line # 24 : VAL_COPY s9(2) s2(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1410
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1411
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1412
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1413
Executed line # 9 : OUT_NUM s2(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1414
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1415
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1416
Executed line # 12 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1417
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1418
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1419
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1420
Executed line # 20 : PUSH s4(26) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1421
Executed line # 21 : PUSH s2(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1422
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:2 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1423
Executed line # 23 : SUB s2(2) s8(2) s9(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1424
Executed line # 24 : VAL_COPY s9(0) s2(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1425
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1426
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1427
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1428
Executed line # 9 : OUT_NUM s2(0) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1429
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1430
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1431
Executed line # 12 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1432
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1433
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1434
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1435
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1436
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1437
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1438
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:3 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1439
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1440
Executed line # 29 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1441
Executed line # 30 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1442
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1443
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1444
Executed line # 33 : PUSH s4(26) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1445
Executed line # 34 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1446
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:4 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1447
Executed line # 36 : SUB s2(2) s11(1) s12(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1448
Executed line # 37 : VAL_COPY s12(1) s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1449
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1450
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1451
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1452
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1453
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1454
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1455
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1456
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1457
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1458
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1459
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1460
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1461
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1462
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1463
Executed line # 41 : VAL_COPY s3(1) s13(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:3 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1464
Executed line # 42 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:3 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 26 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1465
Executed line # 43 : POP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:3 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1466
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:3 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1467
Executed line # 45 : ADD s10(1) s13(1) s14(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1468
Executed line # 46 : VAL_COPY s14(2) s3(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1469
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1470
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1471
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1472
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1473
Executed line # 28 : VAL_COPY s3(2) s10(2) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1474
Executed line # 29 : POP s2(4) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:2 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1475
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1476
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1477
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1478
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1479
Executed line # 34 : PUSH s2(4) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1480
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:2 s11:1 s12:1 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1481
Executed line # 36 : SUB s2(4) s11(1) s12(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1482
Executed line # 37 : VAL_COPY s12(3) s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1483
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1484
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1485
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1486
Executed line # 9 : OUT_NUM s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1487
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1488
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1489
Executed line # 12 : TEST_GTR s5(2) s2(3) s6(0) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1490
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1491
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1492
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1493
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1494
Executed line # 21 : PUSH s2(3) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1495
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1496
Executed line # 23 : SUB s2(3) s8(2) s9(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1497
Executed line # 24 : VAL_COPY s9(1) s2(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1498
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1499
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1500
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1501
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1502
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1503
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1504
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1505
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1506
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1507
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1508
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1509
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1510
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1511
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:2 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1512
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:1 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1513
Executed line # 29 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1514
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1515
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1516
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1517
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1518
Executed line # 34 : PUSH s2(3) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1519
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:3 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1520
Executed line # 36 : SUB s2(3) s11(1) s12(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1521
Executed line # 37 : VAL_COPY s12(2) s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1522
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1523
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1524
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1525
Executed line # 9 : OUT_NUM s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1526
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1527
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1528
Executed line # 12 : TEST_GTR s5(2) s2(2) s6(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1529
Executed line # 13 : JUMP_IF_0 s6(0) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1530
Executed line # 18 : end_if_2(17) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1531
Executed line # 19 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1532
Executed line # 20 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1533
Executed line # 21 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1534
Executed line # 22 : VAL_COPY 2(2) s8(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:1 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1535
Executed line # 23 : SUB s2(2) s8(2) s9(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1536
Executed line # 24 : VAL_COPY s9(0) s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:39 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1537
Executed line # 25 : VAL_COPY end_return_1(26) s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1538
Executed line # 26 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1539
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1540
Executed line # 9 : OUT_NUM s2(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1541
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1542
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:0 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1543
Executed line # 12 : TEST_GTR s5(2) s2(0) s6(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1544
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1545
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:0 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1546
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1547
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1548
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1549
Executed line # 50 : JUMP s4(26) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1550
Executed line # 27 : end_return_1(26) : 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1551
Executed line # 28 : VAL_COPY s3(1) s10(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:0 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1552
Executed line # 29 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:1 s4:26 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1553
Executed line # 30 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1554
Executed line # 31 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1555
Executed line # 32 : PUSH s3(0) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1556
Executed line # 33 : PUSH s4(39) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1557
Executed line # 34 : PUSH s2(2) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1558
Executed line # 35 : VAL_COPY 1(1) s11(1) 
ST { s1:49 s10:1 s11:1 s12:2 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1559
Executed line # 36 : SUB s2(2) s11(1) s12(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1560
Executed line # 37 : VAL_COPY s12(1) s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1561
Executed line # 38 : VAL_COPY end_return_2(39) s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1562
Executed line # 39 : JUMP _func_fib(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1563
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1564
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1565
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1566
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1567
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1568
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1569
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1570
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1571
Executed line # 16 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1572
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1573
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1574
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1575
Executed line # 41 : VAL_COPY s3(1) s13(1) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:1 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 2 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1576
Executed line # 42 : POP s2(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1577
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:1 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1578
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1579
Executed line # 45 : ADD s10(1) s13(1) s14(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1580
Executed line # 46 : VAL_COPY s14(2) s3(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1581
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1582
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1583
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1584
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:1 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1585
Executed line # 41 : VAL_COPY s3(2) s13(2) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:2 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 3 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1586
Executed line # 42 : POP s2(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1587
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:2 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1588
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:2 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1589
Executed line # 45 : ADD s10(1) s13(2) s14(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1590
Executed line # 46 : VAL_COPY s14(3) s3(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1591
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1592
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1593
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1594
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:2 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1595
Executed line # 41 : VAL_COPY s3(3) s13(3) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:3 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 4 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1596
Executed line # 42 : POP s2(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1597
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:3 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1598
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:3 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1599
Executed line # 45 : ADD s10(1) s13(3) s14(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1600
Executed line # 46 : VAL_COPY s14(4) s3(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1601
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1602
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1603
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1604
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:3 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1605
Executed line # 41 : VAL_COPY s3(4) s13(4) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:4 s15:8 s2:4 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 5 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1606
Executed line # 42 : POP s2(5) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:4 s15:8 s2:5 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1607
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:4 s15:8 s2:5 s3:4 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1608
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:4 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1609
Executed line # 45 : ADD s10(1) s13(4) s14(5) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1610
Executed line # 46 : VAL_COPY s14(5) s3(5) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1611
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1612
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1613
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1614
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:4 s14:5 s15:8 s2:5 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1615
Executed line # 41 : VAL_COPY s3(5) s13(5) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:5 s15:8 s2:5 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 6 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1616
Executed line # 42 : POP s2(6) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:5 s15:8 s2:6 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1617
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:5 s15:8 s2:6 s3:5 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1618
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:5 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1619
Executed line # 45 : ADD s10(1) s13(5) s14(6) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:6 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1620
Executed line # 46 : VAL_COPY s14(6) s3(6) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:6 s3:6 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1621
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:6 s3:6 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1622
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:6 s3:6 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1623
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:6 s3:6 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1624
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:5 s14:6 s15:8 s2:6 s3:6 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1625
Executed line # 41 : VAL_COPY s3(6) s13(6) 
ST { s1:49 s10:1 s11:1 s12:1 s13:6 s14:6 s15:8 s2:6 s3:6 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 7 39 0 8 58 0 0 0 0 } (bottom)

Step # 1626
Executed line # 42 : POP s2(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:6 s14:6 s15:8 s2:7 s3:6 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 39 0 8 58 0 0 0 0 } (bottom)

Step # 1627
Executed line # 43 : POP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:6 s14:6 s15:8 s2:7 s3:6 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 8 58 0 0 0 0 } (bottom)

Step # 1628
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:6 s14:6 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 1629
Executed line # 45 : ADD s10(1) s13(6) s14(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:6 s14:7 s15:8 s2:7 s3:0 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 1630
Executed line # 46 : VAL_COPY s14(7) s3(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:6 s14:7 s15:8 s2:7 s3:7 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 1631
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:6 s14:7 s15:8 s2:7 s3:7 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 1632
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:6 s14:7 s15:8 s2:7 s3:7 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 1633
Executed line # 50 : JUMP s4(39) 
ST { s1:49 s10:1 s11:1 s12:1 s13:6 s14:7 s15:8 s2:7 s3:7 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 1634
Executed line # 40 : end_return_2(39) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:6 s14:7 s15:8 s2:7 s3:7 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 1635
Executed line # 41 : VAL_COPY s3(7) s13(7) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:7 s15:8 s2:7 s3:7 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 8 58 0 0 0 0 } (bottom)

Step # 1636
Executed line # 42 : POP s2(8) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:7 s15:8 s2:8 s3:7 s4:39 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 58 0 0 0 0 } (bottom)

Step # 1637
Executed line # 43 : POP s4(58) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:7 s15:8 s2:8 s3:7 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 0 0 0 } (bottom)

Step # 1638
Executed line # 44 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:7 s15:8 s2:8 s3:0 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 1639
Executed line # 45 : ADD s10(1) s13(7) s14(8) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s2:8 s3:0 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 1640
Executed line # 46 : VAL_COPY s14(8) s3(8) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s2:8 s3:8 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 1641
Executed line # 47 : JUMP _func_rtn_fib(48) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s2:8 s3:8 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 1642
Executed line # 49 : _func_rtn_fib(48) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s2:8 s3:8 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 1643
Executed line # 50 : JUMP s4(58) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s2:8 s3:8 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 1644
Executed line # 59 : end_return_3(58) : 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s2:8 s3:8 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 1645
Executed line # 60 : VAL_COPY s3(8) s16(8) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s16:8 s2:8 s3:8 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 1646
Executed line # 61 : POP s2(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s16:8 s2:0 s3:8 s4:58 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 0 } (bottom)

Step # 1647
Executed line # 62 : POP s4(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s16:8 s2:0 s3:8 s4:0 s5:2 s6:1 s7:1 s8:2 s9:0 }
Stack (top) { 0 } (bottom)

Step # 1648
Executed line # 63 : POP s3(0) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s16:8 s2:0 s3:0 s4:0 s5:2 s6:1 s7:1 s8:2 s9:0 }

Step # 1649
Executed line # 64 : OUT_NUM s16(8) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s16:8 s2:0 s3:0 s4:0 s5:2 s6:1 s7:1 s8:2 s9:0 }

Step # 1650
Executed line # 65 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s16:8 s2:0 s3:0 s4:0 s5:2 s6:1 s7:1 s8:2 s9:0 }

Step # 1651
Executed line # 66 : RANDOM s17(97) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s16:8 s17:97 s2:0 s3:0 s4:0 s5:2 s6:1 s7:1 s8:2 s9:0 }

Step # 1652
Executed line # 67 : OUT_NUM s17(97) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s16:8 s17:97 s2:0 s3:0 s4:0 s5:2 s6:1 s7:1 s8:2 s9:0 }

Step # 1653
Executed line # 68 : OUT_CHAR 10(10) 
ST { s1:49 s10:1 s11:1 s12:1 s13:7 s14:8 s15:8 s16:8 s17:97 s2:0 s3:0 s4:0 s5:2 s6:1 s7:1 s8:2 s9:0 }

