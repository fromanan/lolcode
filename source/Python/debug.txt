Step # 1
Executed line # 1 : RANDOM s1(49) 
ST { s1:49 }

Step # 2
Executed line # 2 : OUT_NUM s1(49) 
ST { s1:49 }

Step # 3
Executed line # 3 : OUT_CHAR 10(10) 
ST { s1:49 }

Step # 4
Executed line # 4 : VAL_COPY 0(0) s2(0) 
ST { s1:49 s2:0 }

Step # 5
Executed line # 5 : VAL_COPY 0(0) s3(0) 
ST { s1:49 s2:0 s3:0 }

Step # 6
Executed line # 6 : VAL_COPY 0(0) s4(0) 
ST { s1:49 s2:0 s3:0 s4:0 }

Step # 7
Executed line # 7 : JUMP _func_end_fib(54) 
ST { s1:49 s2:0 s3:0 s4:0 }

Step # 8
Executed line # 55 : _func_end_fib(54) : 
ST { s1:49 s2:0 s3:0 s4:0 }

Step # 9
Executed line # 56 : PUSH s3(0) 
ST { s1:49 s2:0 s3:0 s4:0 }
Stack (top) { 0 } (bottom)

Step # 10
Executed line # 57 : PUSH s4(0) 
ST { s1:49 s2:0 s3:0 s4:0 }
Stack (top) { 0 0 } (bottom)

Step # 11
Executed line # 58 : PUSH s2(0) 
ST { s1:49 s2:0 s3:0 s4:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 12
Executed line # 59 : VAL_COPY 1(1) s19(1) 
ST { s1:49 s19:1 s2:0 s3:0 s4:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 13
Executed line # 60 : VAL_COPY s19(1) s2(1) 
ST { s1:49 s19:1 s2:1 s3:0 s4:0 }
Stack (top) { 0 0 0 } (bottom)

Step # 14
Executed line # 61 : VAL_COPY end_return_3(62) s4(62) 
ST { s1:49 s19:1 s2:1 s3:0 s4:62 }
Stack (top) { 0 0 0 } (bottom)

Step # 15
Executed line # 62 : JUMP _func_fib(7) 
ST { s1:49 s19:1 s2:1 s3:0 s4:62 }
Stack (top) { 0 0 0 } (bottom)

Step # 16
Executed line # 8 : _func_fib(7) : 
ST { s1:49 s19:1 s2:1 s3:0 s4:62 }
Stack (top) { 0 0 0 } (bottom)

Step # 17
Executed line # 9 : OUT_NUM s2(1) 
ST { s1:49 s19:1 s2:1 s3:0 s4:62 }
Stack (top) { 0 0 0 } (bottom)

Step # 18
Executed line # 10 : OUT_CHAR 10(10) 
ST { s1:49 s19:1 s2:1 s3:0 s4:62 }
Stack (top) { 0 0 0 } (bottom)

Step # 19
Executed line # 11 : VAL_COPY 2(2) s5(2) 
ST { s1:49 s19:1 s2:1 s3:0 s4:62 s5:2 }
Stack (top) { 0 0 0 } (bottom)

Step # 20
Executed line # 12 : TEST_GTR s5(2) s2(1) s6(1) 
ST { s1:49 s19:1 s2:1 s3:0 s4:62 s5:2 s6:1 }
Stack (top) { 0 0 0 } (bottom)

Step # 21
Executed line # 13 : JUMP_IF_0 s6(1) end_if_2(17) 
ST { s1:49 s19:1 s2:1 s3:0 s4:62 s5:2 s6:1 }
Stack (top) { 0 0 0 } (bottom)

Step # 22
Executed line # 14 : VAL_COPY 1(1) s7(1) 
ST { s1:49 s19:1 s2:1 s3:0 s4:62 s5:2 s6:1 s7:1 }
Stack (top) { 0 0 0 } (bottom)

Step # 23
Executed line # 15 : VAL_COPY s7(1) s3(1) 
ST { s1:49 s19:1 s2:1 s3:1 s4:62 s5:2 s6:1 s7:1 }
Stack (top) { 0 0 0 } (bottom)

Step # 24
Executed line # 16 : JUMP _func_rtn_fib(52) 
ST { s1:49 s19:1 s2:1 s3:1 s4:62 s5:2 s6:1 s7:1 }
Stack (top) { 0 0 0 } (bottom)

Step # 25
Executed line # 53 : _func_rtn_fib(52) : 
ST { s1:49 s19:1 s2:1 s3:1 s4:62 s5:2 s6:1 s7:1 }
Stack (top) { 0 0 0 } (bottom)

Step # 26
Executed line # 54 : JUMP s4(62) 
ST { s1:49 s19:1 s2:1 s3:1 s4:62 s5:2 s6:1 s7:1 }
Stack (top) { 0 0 0 } (bottom)

Step # 27
Executed line # 63 : end_return_3(62) : 
ST { s1:49 s19:1 s2:1 s3:1 s4:62 s5:2 s6:1 s7:1 }
Stack (top) { 0 0 0 } (bottom)

Step # 28
Executed line # 64 : VAL_COPY s3(1) s20(1) 
ST { s1:49 s19:1 s2:1 s20:1 s3:1 s4:62 s5:2 s6:1 s7:1 }
Stack (top) { 0 0 0 } (bottom)

Step # 29
Executed line # 65 : POP s2(0) 
ST { s1:49 s19:1 s2:0 s20:1 s3:1 s4:62 s5:2 s6:1 s7:1 }
Stack (top) { 0 0 } (bottom)

Step # 30
Executed line # 66 : POP s4(0) 
ST { s1:49 s19:1 s2:0 s20:1 s3:1 s4:0 s5:2 s6:1 s7:1 }
Stack (top) { 0 } (bottom)

Step # 31
Executed line # 67 : POP s3(0) 
ST { s1:49 s19:1 s2:0 s20:1 s3:0 s4:0 s5:2 s6:1 s7:1 }

Step # 32
Executed line # 68 : OUT_NUM s20(1) 
ST { s1:49 s19:1 s2:0 s20:1 s3:0 s4:0 s5:2 s6:1 s7:1 }

Step # 33
Executed line # 69 : OUT_CHAR 10(10) 
ST { s1:49 s19:1 s2:0 s20:1 s3:0 s4:0 s5:2 s6:1 s7:1 }

Step # 34
Executed line # 70 : RANDOM s21(97) 
ST { s1:49 s19:1 s2:0 s20:1 s21:97 s3:0 s4:0 s5:2 s6:1 s7:1 }

Step # 35
Executed line # 71 : OUT_NUM s21(97) 
ST { s1:49 s19:1 s2:0 s20:1 s21:97 s3:0 s4:0 s5:2 s6:1 s7:1 }

Step # 36
Executed line # 72 : OUT_CHAR 10(10) 
ST { s1:49 s19:1 s2:0 s20:1 s21:97 s3:0 s4:0 s5:2 s6:1 s7:1 }

